buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

ext {
    springVersion = '4.2.1.RELEASE'
    springDataJpaVersion = '1.9.0.RELEASE'
    aspectjVersion = '1.7.4'
    commonsLangVersion = '3.4'
    lombokVersion = '1.16.6'
    hibernateVersion = '5.1.0.Final'
    testngVersion = '6.8.21'
    mockitoVersion = '1.10.19'
    hamcrestVersion = '1.3'
    springTestDbunitVersion = '1.2.1'
    dbunitVersion = '2.5.1'
    slf4jVersion = '1.7.18'
    hsqldbVersion = '2.3.2'
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

[compileJava, compileTestJava]*.options.collect { options ->
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-Xlint:none']
}

repositories {
    jcenter()
}

configurations {
    ajc
    aspects
    compile {
        extendsFrom aspects
    }
}

dependencies {
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework.data:spring-data-jpa:$springDataJpaVersion"
    compile "org.apache.commons:commons-lang3:$commonsLangVersion"
    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    compile "org.aspectj:aspectjrt:$aspectjVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"

    provided "org.projectlombok:lombok:$lombokVersion"

    testCompile "org.testng:testng:$testngVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "com.github.springtestdbunit:spring-test-dbunit:$springTestDbunitVersion"
    testCompile "org.dbunit:dbunit:$dbunitVersion"
    testCompile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    testCompile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    testCompile "org.hsqldb:hsqldb:$hsqldbVersion"

    ajc "org.aspectj:aspectjtools:$aspectjVersion"
    aspects "org.springframework:spring-aspects:$springVersion"
}

test {
    useTestNG()
}

def aspectj = { destDir, aspectPath, inpath, classpath ->
    ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties",
            classpath: configurations.ajc.asPath)

    ant.iajc(
            maxmem: "1024m", fork: "true", Xlint: "ignore",
            destDir: destDir,
            aspectPath: aspectPath,
            inpath: inpath,
            classpath: classpath,
            source: project.sourceCompatibility,
            target: project.targetCompatibility
    )
}

compileJava {
    doLast {
        aspectj project.sourceSets.main.output.classesDir.absolutePath,
                configurations.aspects.asPath,
                project.sourceSets.main.output.classesDir.absolutePath,
                project.sourceSets.main.runtimeClasspath.asPath
    }
}

compileTestJava {
    dependsOn jar

    doLast {
        aspectj project.sourceSets.test.output.classesDir.absolutePath,
                configurations.aspects.asPath + jar.archivePath,
                project.sourceSets.test.output.classesDir.absolutePath,
                project.sourceSets.test.runtimeClasspath.asPath
    }
}